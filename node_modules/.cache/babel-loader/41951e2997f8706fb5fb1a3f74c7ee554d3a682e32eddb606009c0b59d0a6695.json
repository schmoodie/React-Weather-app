{"ast":null,"code":"var _jsxFileName = \"/Users/pontuslarsson/Desktop/Projekt/React-projects/weather-api/src/Forecast.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastData = props => {\n  const {\n    data\n  } = props;\n  const list = data.list;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-wrapper\",\n      children: list.map(e => {\n        let weatherStatus = e.weather[0].main;\n        let weatherImgClass = \"\";\n        if (weatherStatus === \"Clouds\") {\n          if (e.clouds.all >= 50) {\n            weatherImgClass = \"cloudy\";\n          } else {\n            weatherImgClass = \"partly-cloudy\";\n          }\n        } else if (weatherStatus === \"Rain\") {\n          weatherImgClass = \"rainy\";\n        } else if (weatherStatus === \"Snow\") {\n          weatherImgClass = \"snowy\";\n        } else if (weatherStatus === \"Clear\") {\n          weatherImgClass = \"sunny\";\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-time\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: e.dt_txt.slice(11, 14)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `forecast-icon ${weatherImgClass}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forecast-temp\",\n            children: [Math.ceil(e.main.temp), \" \\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, e.dt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = ForecastData;\nexport default ForecastData;\nvar _c;\n$RefreshReg$(_c, \"ForecastData\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ForecastData","props","data","list","children","undefined","className","map","e","weatherStatus","weather","main","weatherImgClass","clouds","all","dt_txt","slice","fileName","_jsxFileName","lineNumber","columnNumber","Math","ceil","temp","dt","_c","$RefreshReg$"],"sources":["/Users/pontuslarsson/Desktop/Projekt/React-projects/weather-api/src/Forecast.js"],"sourcesContent":["import React from \"react\";\n\nconst ForecastData = (props) => {\n  const { data } = props;\n  const list = data.list;\n\n  return (\n    <div >\n      {list !== undefined ? (\n        <div className=\"forecast-wrapper\">\n          {list.map((e) => {\n            let weatherStatus = e.weather[0].main;\n            let weatherImgClass = \"\";\n\n            if (weatherStatus === \"Clouds\") {\n              if (e.clouds.all >= 50) {\n                weatherImgClass = \"cloudy\";\n              } else {\n                weatherImgClass = \"partly-cloudy\";\n              }\n            } else if (weatherStatus === \"Rain\") {\n              weatherImgClass = \"rainy\";\n            } else if (weatherStatus === \"Snow\") {\n              weatherImgClass = \"snowy\";\n            } else if (weatherStatus === \"Clear\") {\n              weatherImgClass = \"sunny\";\n            }\n\n            return (\n              <div key={e.dt} className=\"forecast-time\">\n                <p>{e.dt_txt.slice(11, 14)}</p>\n                <div className={`forecast-icon ${weatherImgClass}`}></div>\n                <p className=\"forecast-temp\">{Math.ceil(e.main.temp)} Â°C</p>\n              </div>\n            );\n          })}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ForecastData;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAM;IAAEC;EAAK,CAAC,GAAGD,KAAK;EACtB,MAAME,IAAI,GAAGD,IAAI,CAACC,IAAI;EAEtB,oBACEJ,OAAA;IAAAK,QAAA,EACGD,IAAI,KAAKE,SAAS,gBACjBN,OAAA;MAAKO,SAAS,EAAC,kBAAkB;MAAAF,QAAA,EAC9BD,IAAI,CAACI,GAAG,CAAEC,CAAC,IAAK;QACf,IAAIC,aAAa,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;QACrC,IAAIC,eAAe,GAAG,EAAE;QAExB,IAAIH,aAAa,KAAK,QAAQ,EAAE;UAC9B,IAAID,CAAC,CAACK,MAAM,CAACC,GAAG,IAAI,EAAE,EAAE;YACtBF,eAAe,GAAG,QAAQ;UAC5B,CAAC,MAAM;YACLA,eAAe,GAAG,eAAe;UACnC;QACF,CAAC,MAAM,IAAIH,aAAa,KAAK,MAAM,EAAE;UACnCG,eAAe,GAAG,OAAO;QAC3B,CAAC,MAAM,IAAIH,aAAa,KAAK,MAAM,EAAE;UACnCG,eAAe,GAAG,OAAO;QAC3B,CAAC,MAAM,IAAIH,aAAa,KAAK,OAAO,EAAE;UACpCG,eAAe,GAAG,OAAO;QAC3B;QAEA,oBACEb,OAAA;UAAgBO,SAAS,EAAC,eAAe;UAAAF,QAAA,gBACvCL,OAAA;YAAAK,QAAA,EAAII,CAAC,CAACO,MAAM,CAACC,KAAK,CAAC,EAAE,EAAE,EAAE;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/BrB,OAAA;YAAKO,SAAS,EAAG,iBAAgBM,eAAgB;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1DrB,OAAA;YAAGO,SAAS,EAAC,eAAe;YAAAF,QAAA,GAAEiB,IAAI,CAACC,IAAI,CAACd,CAAC,CAACG,IAAI,CAACY,IAAI,CAAC,EAAC,QAAG;UAAA;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GAHpDZ,CAAC,CAACgB,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIT,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,GACJ;EAAI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACK,EAAA,GAtCIzB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}